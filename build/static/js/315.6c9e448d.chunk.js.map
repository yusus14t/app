{"version":3,"file":"static/js/315.6c9e448d.chunk.js","mappings":"wMAmCA,UA7BA,SAAgBA,IAAOC,EAAAA,EAAAA,GAAAD,GACrB,IAAAE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,IAE1BI,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,IAEH,IAAMA,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGC,EAAAA,GAAAA,IAAkB,eAAgB,CAACC,OAAQ,CAAEC,UAAU,KAAS,KAAD,EAAAR,EAAAG,EAAAM,KAA9ER,EAAID,EAAJC,KACNT,EAAe,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMV,SAASY,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE1BQ,QAAQC,MAAKT,EAAAO,IAAQ,yBAAAP,EAAAU,OAAA,GAAAd,EAAA,kBAExB,kBAPkB,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KASnB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,SAC1B3B,EAAQ6B,QACR7B,EAAQ8B,KAAI,SAACC,EAAQC,GAAG,OACtBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACF,OAAQA,GAAaC,EAAO,OAMpD,C","sources":["components/webcomponents/Clinics.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { axiosInstance } from \"../../constants/utils\";\nimport ClinicCard from \"../App/cards/ClinicCard\";\nimport Container from \"../../layout/Container\";\n\n\nfunction Clinics({  }) {\n  const [clinics, setClinics] = useState([]);\n\n  useEffect(() => {\n    getAllClinics();\n  }, []);\n\n  const getAllClinics = async () => {\n    try {\n      let { data } = await axiosInstance.get(\"/all-clinics\", {params: { isClinic: true }});\n      setClinics(data?.clinics);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"row mx-0 px-0\">\n        { clinics.length &&\n          clinics.map((clinic, key) =>\n            <ClinicCard clinic={clinic} key={key} />\n          )\n        }\n      </div>\n    </Container>\n  );\n}\n\nexport default Clinics;\n"],"names":["_ref","_objectDestructuringEmpty","_useState","useState","_useState2","_slicedToArray","clinics","setClinics","useEffect","getAllClinics","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axiosInstance$","data","wrap","_context","prev","next","axiosInstance","params","isClinic","sent","t0","console","error","stop","apply","arguments","_jsx","Container","children","className","length","map","clinic","key","ClinicCard"],"sourceRoot":""}