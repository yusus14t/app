{"version":3,"file":"static/js/806.22eb02f3.chunk.js","mappings":"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","sources":["components/App/Pages/Login.js","components/authentication/LogIn.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./Login.css\";\r\nimport loginpaoster from \"../../../assets/img/logo/logo.jpg\";\r\nimport Container from \"../Layout/Container\";\r\n\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEdit,\r\n  faHospital,\r\n  faHospitalUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  axiosInstance,\r\n  getAuthHeader,\r\n  getFullPath,\r\n  getImages,\r\n  NumberFormat,\r\n} from \"../../../constants/utils\";\r\nimport useToasty from \"../../../hooks/toasty\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { WEBSITE_IMAGE, userRoutes } from \"../../../constants/constant\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport background1 from \"../../../assets/img/backgrounds/department.jpg\";\r\nimport clinic from \"../../../assets/menuIcons/clinic.png\";\r\nimport Hospital from \"../../../assets/menuIcons/hospital.png\";\r\n\r\nconst Login = () => {\r\n  const { state: LocationState } = useLocation();\r\n  const {\r\n    register,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ onChange: true });\r\n  const inputRef = useRef(null);\r\n  const otpRef = useRef(null);\r\n  const toasty = useToasty();\r\n  const [otp, setOtp] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [type, setType] = useState({});\r\n  const COMPONENTS = {\r\n    1: \"SIGNUP_FORM\",\r\n    2: \"USER_TYPES_FORM\",\r\n    3: \"PATIENT_FORM\",\r\n    4: \"ORGANIZATION_FORM\",\r\n  };\r\n  const [component, setComponent] = useState(COMPONENTS[\"1\"]);\r\n  const [images, setImages] = useState([]);\r\n  const [details, setDetails] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    initailizer();\r\n  }, []);\r\n\r\n  const userValidate = async (value) => {\r\n    try {\r\n      if (!value) {\r\n        toasty.error(\"Enter number\");\r\n        return;\r\n      }\r\n\r\n      let { data } = await axiosInstance.post(\"/signup\", {\r\n        ...details,\r\n        phone: value,\r\n      });\r\n      setUser(data?.user);\r\n      setDetails({ ...details, phone: value });\r\n      setOtp(true);\r\n\r\n      if (data?.status_code === 411) toasty.error(data?.message);\r\n      else toasty.success(data?.message);\r\n    } catch (error) {\r\n      toasty.error(error?.message);\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleEdit = () => {\r\n    setOtp(false);\r\n    inputRef.current.value = details.phone;\r\n  };\r\n\r\n  const ValidateOTP = async () => {\r\n    try {\r\n      let { data } = await axiosInstance.post(\"/validate-otp\", {\r\n        otp: otpRef.current.value,\r\n        userId: user?._id,\r\n      });\r\n\r\n      localStorage.setItem(\"user\", JSON.stringify(data?.user));\r\n      localStorage.setItem(\"token\", JSON.stringify(data?.token));\r\n      if (data?.user?.twoFactor?.isVerified && data?.user?.isActive) {\r\n        if (LocationState?.redirectTo)\r\n          window.location.replace(LocationState.redirectTo);\r\n        else window.location.replace(userRoutes[data?.user?.userType]?.path);\r\n      } else {\r\n        setComponent(COMPONENTS[\"2\"]);\r\n      }\r\n\r\n      toasty.success(data?.message);\r\n    } catch (error) {\r\n      toasty.error(error?.message);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleTypes = async (type) => {\r\n    try {\r\n      let { data } = await axiosInstance.post(\r\n        \"/common/set-usertype\",\r\n        { type, userId: user._id, organizationId: user?.organizationId },\r\n        getAuthHeader()\r\n      );\r\n      setType(type);\r\n      localStorage.setItem(\"user\", JSON.stringify(data?.user));\r\n\r\n      if (type === \"patient\") setComponent(COMPONENTS[\"3\"]);\r\n      else if ([\"hospital\", \"clinic\"].includes(type))\r\n        setComponent(COMPONENTS[\"4\"]);\r\n      else window.location.replace(userRoutes[data?.user?.userType]?.path);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const submit = async (formdata) => {\r\n    try {\r\n      formdata[\"phone\"] = user.phone;\r\n      if ([\"hospital\", \"clinic\"].includes(formdata.source)) {\r\n        formdata.isLogin = true;\r\n        let { data } = await axiosInstance.post(\r\n          \"common/create-hospital\",\r\n          formdata,\r\n          getAuthHeader()\r\n        );\r\n        if (data?.isActive) {\r\n          localStorage.setItem(\"user\", JSON.stringify(data?.organization));\r\n          window.location.reload();\r\n        }\r\n      } else if (formdata.source === \"patient\") {\r\n        formdata[\"_id\"] = user?._id;\r\n        let { data } = await axiosInstance.post(\r\n          \"/patient/patient-details\",\r\n          formdata,\r\n          getAuthHeader()\r\n        );\r\n\r\n        if (data?.isActive) {\r\n          localStorage.setItem(\"user\", JSON.stringify(data?.user));\r\n\r\n          if (LocationState?.redirectTo)\r\n            window.location.replace(LocationState.redirectTo);\r\n          else window.location.replace(\"/patient\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const initailizer = async () => {\r\n    let imagesData = await getImages();\r\n    setImages(imagesData.data.images);\r\n  };\r\n\r\n  const findImage = (id) => {\r\n    return getFullPath(images.find((image) => image.id === id)?.image);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-primary\" style={{ height: \"100vh\" }}>\r\n      <Container className=\"login-page mb-0 px-2\">\r\n        <div className=\"login-img-container\">\r\n          <img className=\"w-100 py-3\" src={loginpaoster} />\r\n        </div>\r\n        {component === COMPONENTS[\"1\"] && (\r\n          <div className=\" d-flex flex-column align-items-center bg-white curved w-100 p-4 parent-div \">\r\n            <h4 className=\"m-0\"> Login/SignUp</h4>\r\n            {!otp ? (\r\n              <div>\r\n                <div className=\"mb-2 mt-4 d-flex flex-column\">\r\n                  <label className=\" \">Enter Mobile Number</label>\r\n                  <input\r\n                    className=\"login-input rounded border-0 ls8 text-center bg-light p-2\"\r\n                    placeholder=\"8218397850\"\r\n                    type=\"text\"\r\n                    maxLength={10}\r\n                    inputMode=\"numeric\"\r\n                    ref={inputRef}\r\n                    onChange={NumberFormat}\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <input className=\"checkbox\" type=\"checkbox\" />\r\n                  <span className=\"mb-0 mx-2\">\r\n                    <Link to={\"/terms\"}>\r\n                      {\" \"}\r\n                      Agree to the{\" \"}\r\n                      <span className=\"mb-0 text-primary\">\r\n                        terms and conditions\r\n                      </span>\r\n                    </Link>\r\n                  </span>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                  <button\r\n                    className=\"btn btn-primary shadow-none mt-3\"\r\n                    onClick={() => userValidate(inputRef.current.value)}\r\n                  >\r\n                    Send OTP\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"mobile text-dark\">\r\n                  <p className=\"mb-1 text-dark \">Mobile Number</p>\r\n                  <h4 className=\"text-muted rounded bg-light p-2\">\r\n                    +91 &nbsp;\r\n                    {`${String(details?.phone || \"\").slice(0, 3)}-${String(\r\n                      details?.phone || \"\"\r\n                    ).slice(3, 6)}-${String(details?.phone || \"\").slice(\r\n                      6,\r\n                      10\r\n                    )}`}\r\n                    <span>\r\n                      <FontAwesomeIcon\r\n                        onClick={handleEdit}\r\n                        className=\"cursor-pointer medit ml-1 text\"\r\n                        icon={faEdit}\r\n                      />\r\n                    </span>\r\n                  </h4>\r\n                </div>\r\n                <div className=\"mb-2 mt-4 d-flex flex-column\">\r\n                  <label className=\" \">Enter OTP</label>\r\n                  <input\r\n                    className=\"login-input text-center ls8 rounded border-0 bg-light p-2\"\r\n                    placeholder=\"XXXX\"\r\n                    type=\"text\"\r\n                    maxLength={4}\r\n                    inputMode=\"numeric\"\r\n                    ref={otpRef}\r\n                  />\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                  <button\r\n                    className=\"btn btn-primary mt-3\"\r\n                    onClick={ValidateOTP}\r\n                  >\r\n                    Validate OTP\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}  \r\n\r\n        {component === COMPONENTS[\"2\"] && (\r\n          <div className=\"d-flex flex-column align-items-center bg-white curved w-100 p-4 parent-div\">\r\n            <div\r\n              className=\"patient text-center\"\r\n              onClick={() => handleTypes(\"patient\")}\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"text-dark \"\r\n                style={{ fontSize: \"60px\" }}\r\n                icon={faHospitalUser}\r\n              />\r\n\r\n              <p className=\"mb-0 mt-1\">\r\n                <strong className=\"text-dark  fs-6 \">Patients</strong>\r\n              </p>\r\n              <p className=\"mb-0 text-muted  fs-12\">To Book Appointment</p>\r\n            </div>\r\n            <div className=\"signup-items\">\r\n              <div\r\n                className=\"signup-item text-center \"\r\n                onClick={() => handleTypes(\"clinic\")}\r\n              >\r\n                <div className=\"signup-icons \">\r\n                  <img className=\"w-100 h-100\" src={clinic} />\r\n                </div>\r\n                <p className=\"mb-0 detail\">\r\n                  To register your <strong className=\"fs-6\">Clinic</strong>\r\n                </p>\r\n              </div>\r\n              <div\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"signup-item text-center\"\r\n                onClick={() => handleTypes(\"hospital\")}\r\n              >\r\n                <div className=\"signup-icons \">\r\n                  <img className=\"w-100 h-100\" src={Hospital} />\r\n                </div>\r\n                <p className=\"mb-0 detail\">\r\n                  To register your <strong className=\"fs-6\">Hospitals</strong>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <from className=\"d-flex justify-content-center w-100\" >\r\n          {/* patient */}\r\n          {component === COMPONENTS[\"3\"] && (\r\n            <div className=\" d-flex flex-column align-items-center bg-white curved  p-4 parent-div \"\r\n            >\r\n              <h4>Fill your datails</h4>\r\n              <div className=\"mb-2 w-100\">\r\n                <label htmlFor=\"\">Mobile Number</label>\r\n                <h4 className=\"mb-2 text-disabled\">\r\n                  +91 {details?.phone?.slice(0, 3)}-\r\n                  {details?.phone?.slice(3, 6)}-{details?.phone?.slice(-4)} \r\n                </h4>\r\n              </div>\r\n              <div>\r\n              <input type=\"hidden\" value={\"patient\"} {...register(\"source\")} />\r\n              <div className=\"w-100 mb-3\">\r\n                <label>\r\n                  Full Name <span className=\"text-anger\">*</span>\r\n                </label>{\" \"}\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login-input w-100 rounded border-0 bg-light p-2\"\r\n                  placeholder=\"Enter full name\"\r\n                  {...register(\"name\", { required: \"name is required\", })}\r\n                />\r\n              </div>\r\n              <div className=\"d-flex mb-3\">\r\n                <div className=\"\" >\r\n                  <label>\r\n                    Age <span>*</span>\r\n                  </label>{\" \"}\r\n                  <br />\r\n                  <input placeholder=\"Enter age\" \r\n                  {...register(\"age\", {required: \"age is required\",})}\r\n                   className=\"login-input rounded border-0 w-100  bg-light p-2 \" />\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Gender <span>*</span>\r\n                  </label>{\" \"}\r\n                  <br />\r\n                  <select className=\"login-input rounded border-0 ms-1 bg-light p-2 \"\r\n                  {...register(\"gender\", { required: \"Gender is required\" })}\r\n                  style={{width:\"105px\", height:\"39px\"}} >\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\" Male\">Male</option>\r\n                    <option value=\"other\">Other</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-100 mb-3\">\r\n                <label>\r\n                  Father Name <span className=\"text-anger\">*</span>\r\n                </label>\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login-input w-100 rounded border-0 bg-light p-2\"\r\n                  placeholder=\"Enter father name.\"\r\n                  {...register(\"fatherName\")}\r\n                />\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <label>\r\n                  Address <span className=\"text-anger\">*</span>\r\n                </label>{\" \"}\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login-input w-100 rounded border-0 bg-light p-2\"\r\n                  placeholder=\"Enter address\"\r\n                  {...register(\"address\", { required: \"address is required\",})}\r\n                />\r\n              </div>\r\n              <button className=\"btn btn-primary shadow-none  w-100 py-2\" type=\"submit\">Save</button>\r\n\r\n              </div>\r\n              \r\n            </div>\r\n          )}\r\n          {/* orgaisation */}\r\n          {component === COMPONENTS[\"4\"] && (\r\n            <div className=\"d-flex flex-column align-items-center bg-white curved w-100 p-4 parent-div2 \">\r\n              <h4>Fill your datails</h4>\r\n              <div className=\"mb-2 w-100\">\r\n                   <label htmlFor=\"\">Mobile Number</label>\r\n                   <h4 className=\"mb-2 text-disabled\">\r\n                     +91 {details?.phone?.slice(0, 3)}{details?.phone?.slice(3, 6)}\r\n                     {details?.phone?.slice(-4)} \r\n                   </h4>\r\n             </div>\r\n             <div className=\"w-100 mb-3\">\r\n                <label>\r\n                  Registration Number<span className=\"text-anger\">*</span>\r\n                </label>{\" \"}\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login-input w-100 rounded border-0 bg-light p-2\"\r\n                  placeholder=\"Enter registration no.\"\r\n                  {...register(\"registrationNo\", { required: \"Registration number is required\", })}\r\n                />\r\n              </div>\r\n              <div className=\"w-100 mb-3\">\r\n                <label>\r\n                  Clinic / Hospital Name<span className=\"text-anger\">*</span>\r\n                </label>{\" \"}\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login-input w-100 rounded border-0 bg-light p-2\"\r\n                  placeholder=\"Enter name\"\r\n                  {...register(\"name\", { required: \"name is required\", })}\r\n                />\r\n              </div>\r\n              <div className=\"w-100 mb-3\">\r\n                <label>\r\n                  Email ID <span className=\"text-anger\">*</span>\r\n                </label>{\" \"}\r\n                <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login-input w-100 rounded border-0 bg-light p-2\"\r\n                  placeholder=\"Enter email ID\"\r\n                  {...register(\"email\", { required: \"Email is required\", })}\r\n                />\r\n              </div>\r\n              <div className=\"w-100\">\r\n                <button className=\"btn btn-primary py-2 shadow-none w-100\">Save</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </from>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  axiosInstance,\r\n  getAuthHeader,\r\n  getFullPath,\r\n  getImages,\r\n  NumberFormat,\r\n} from \"../../constants/utils\";\r\nimport useToasty from \"../../hooks/toasty\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { WEBSITE_IMAGE, userRoutes } from \"../../constants/constant\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Login from '../App/Pages/Login'\r\n\r\nconst LogIn = () => {\r\n  const { state: LocationState } = useLocation();\r\n  const {\r\n    register,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ onChange: true });\r\n  const inputRef = useRef(null);\r\n  const otpRef = useRef(null);\r\n  const toasty = useToasty();\r\n  const [otp, setOtp] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [type, setType] = useState({});\r\n  const COMPONENTS = {\r\n    1: \"SIGNUP_FORM\",\r\n    2: \"USER_TYPES_FORM\",\r\n    3: \"PATIENT_FORM\",\r\n    4: \"ORGANIZATION_FORM\",\r\n  };\r\n  const [component, setComponent] = useState(COMPONENTS[\"4\"]);\r\n  const [images, setImages] = useState([])\r\n  const [details, setDetails] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    initailizer();\r\n  }, [])\r\n\r\n  const userValidate = async (value) => {\r\n    try {\r\n      if (!value) {\r\n        toasty.error(\"Enter number\");\r\n        return;\r\n      }\r\n\r\n      let { data } = await axiosInstance.post(\"/signup\", {\r\n        ...details,\r\n        phone: value,\r\n      });\r\n      setUser(data?.user);\r\n      setDetails({ ...details, phone: value });\r\n      setOtp(true);\r\n\r\n      if (data?.status_code === 411) toasty.error(data?.message);\r\n      else toasty.success(data?.message);\r\n    } catch (error) {\r\n      toasty.error(error?.message);\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleEdit = () => {\r\n    setOtp(false);\r\n  };\r\n\r\n  const ValidateOTP = async () => {\r\n    try {\r\n      let { data } = await axiosInstance.post(\"/validate-otp\", {\r\n        otp: otpRef.current.value,\r\n        userId: user?._id,\r\n      });\r\n\r\n      localStorage.setItem(\"user\", JSON.stringify(data?.user));\r\n      localStorage.setItem(\"token\", JSON.stringify(data?.token));\r\n      if (data?.user?.twoFactor?.isVerified && data?.user?.isActive) {\r\n        if (LocationState?.redirectTo)\r\n          window.location.replace(LocationState.redirectTo);\r\n        else window.location.replace(userRoutes[data?.user?.userType]?.path);\r\n      } else {\r\n        setComponent(COMPONENTS[\"2\"]);\r\n      }\r\n\r\n      toasty.success(data?.message);\r\n    } catch (error) {\r\n      toasty.error(error?.message);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleTypes = async (type) => {\r\n    try {\r\n      let { data } = await axiosInstance.post(\r\n        \"/common/set-usertype\",\r\n        { type, userId: user._id, organizationId: user?.organizationId },\r\n        getAuthHeader()\r\n      );\r\n      setType(type);\r\n      localStorage.setItem(\"user\", JSON.stringify(data?.user));\r\n\r\n      if (type === \"patient\") setComponent(COMPONENTS[\"3\"]);\r\n      else if ([\"hospital\", \"clinic\"].includes(type))\r\n        setComponent(COMPONENTS[\"4\"]);\r\n      else window.location.replace(userRoutes[data?.user?.userType]?.path);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const submit = async (formdata) => {\r\n    try {\r\n      formdata['phone'] = user.phone\r\n      if (['hospital', 'clinic'].includes(formdata.source)) {\r\n        formdata.isLogin = true\r\n        let { data } = await axiosInstance.post('common/create-hospital', formdata, getAuthHeader())\r\n        if (data?.isActive) {\r\n          localStorage.setItem('user', JSON.stringify(data?.organization))\r\n          window.location.reload()\r\n        }\r\n      } else if (formdata.source === \"patient\") {\r\n        formdata[\"_id\"] = user?._id;\r\n        let { data } = await axiosInstance.post(\r\n          \"/patient/patient-details\",\r\n          formdata,\r\n          getAuthHeader()\r\n        );\r\n\r\n        if (data?.isActive) {\r\n          localStorage.setItem(\"user\", JSON.stringify(data?.user));\r\n\r\n          if (LocationState?.redirectTo)\r\n            window.location.replace(LocationState.redirectTo);\r\n          else window.location.replace(\"/patient\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n  const initailizer = async () => {\r\n    let imagesData = await getImages()\r\n    setImages(imagesData.data.images)\r\n  }\r\n\r\n  const findImage = (id) => {\r\n    return getFullPath(images.find(image => image.id === id)?.image)\r\n  }\r\n\r\n  return (\r\n\r\n    \r\n    // <Container className=\" mb-0\">\r\n    //   <div className=\" loginc\" >\r\n    //     <div className=\"w-100 h-25\">\r\n    //       <img className=\"w-100 h-100\" src={background1} />\r\n    //     </div>\r\n    //     <div\r\n          \r\n    //     >\r\n    //       {component === COMPONENTS[\"1\"] && (\r\n    //         <div className=\"loginform col-3 d-flex flex-column\">\r\n    //           <span className=\"h2 text-dark mb-3\">LogIn / Sign Up</span>\r\n\r\n    //           {otp ? (\r\n    //             <>\r\n    //               <div className=\"mobile text-dark\">\r\n    //                 <p className=\"mb-1 text-dark \">Mobile Number</p>\r\n    //                 <h3>\r\n    //                   +91{\" \"}\r\n    //                   {`${String(details?.phone || \"\").slice(0, 2)}-${String(\r\n    //                     details?.phone || \"\"\r\n    //                   ).slice(2, 4)}-${String(details?.phone || \"\").slice(\r\n    //                     4,\r\n    //                     6\r\n    //                   )}-${String(details?.phone || \"\").slice(6, 10)}`}\r\n    //                   <span>\r\n    //                     <FontAwesomeIcon\r\n    //                       onClick={handleEdit}\r\n    //                       className=\"cursor-pointer medit ml-1 text\"\r\n    //                       icon={faEdit}\r\n    //                     />\r\n    //                   </span>\r\n    //                 </h3>\r\n    //               </div>\r\n    //               <div className=\"otp mt-2\">\r\n    //                 <label htmlFor=\"\" className=\"text-disabled\">\r\n    //                   Enter the OTP\r\n    //                 </label>\r\n    //                 <input\r\n    //                   className=\"form-control mt-2 letterSpcing\"\r\n    //                   type=\"text\"\r\n    //                   maxLength={10}\r\n    //                   name=\"OTP\"\r\n    //                   id=\"\"\r\n    //                   placeholder=\"X X X X\"\r\n    //                   ref={otpRef}\r\n    //                 />\r\n    //                 <button\r\n    //                   onClick={ValidateOTP}\r\n    //                   className=\"btn btn-dark btn1 mt-4\"\r\n    //                 >\r\n    //                   Log In\r\n    //                 </button>\r\n    //               </div>\r\n    //             </>\r\n    //           ) : (\r\n    //             <>\r\n    //               <label className=\"mb-2 text-dark\" htmlFor=\"Phone\">\r\n    //                 Mobile Number\r\n    //               </label>\r\n    //               <input\r\n    //                 id=\"Phone\"\r\n    //                 className=\"form-control mb-2 letterSpcing\"\r\n    //                 type=\"text\"\r\n    //                 maxLength={10}\r\n    //                 pattern=\"###-###-####\"\r\n    //                 placeholder=\"822992255\"\r\n    //                 ref={inputRef}\r\n    //                 onChange={NumberFormat}\r\n    //               />\r\n    //               <div className=\"d-flex mr-1\">\r\n    //                 <input type=\"checkbox\" /> <span>Agree to the tems ans conditions</span>\r\n    //               </div>\r\n\r\n    //               <span>\r\n    //                 <button\r\n    //                   onClick={() => userValidate(inputRef.current.value)}\r\n    //                   className=\"btn btn-light btn1\"\r\n    //                 >\r\n    //                   Submit\r\n    //                 </button>\r\n    //               </span>\r\n    //             </>\r\n    //           )}\r\n    //         </div>\r\n    //       )}\r\n\r\n    //       {component === COMPONENTS[\"2\"] && (\r\n    //         <div className=\"loginform mt-0 user-details \">\r\n    //           <h4 className=\"py-3\">Select Anyone </h4>\r\n    //           <div className=\"col-3 d-flex flex-column justify-content-center\">\r\n    //             <div\r\n    //               className=\"col mb-3 p-3 text-center cursor-pointer\"\r\n    //               style={{\r\n    //                 fontSize: \"15px\",\r\n    //                 border: \"1px solid white\",\r\n    //                 width: \"300px\",\r\n    //                 borderRadius: \"5px\",\r\n    //               }}\r\n    //               onClick={() => handleTypes(\"patient\")}\r\n    //             >\r\n    //               <span>To Book Appointments</span>\r\n    //               <br />\r\n    //               Patient\r\n    //             </div>\r\n    //             <div\r\n    //               className=\"col text-center p-3 cursor-pointer\"\r\n    //               style={{\r\n    //                 fontSize: \"15px\",\r\n    //                 border: \"1px solid white\",\r\n    //                 width: \"300px\",\r\n    //                 borderRadius: \"5px\",\r\n    //               }}\r\n    //               onClick={() => handleTypes(\"hospital\")}\r\n    //             >\r\n    //               <span>Only for &nbsp;</span>\r\n    //               &nbsp;Hospitals\r\n    //             </div>\r\n    //             <div\r\n    //               className=\"col p-3 text-center my-3 cursor-pointer\"\r\n    //               style={{\r\n    //                 fontSize: \"15px\",\r\n    //                 border: \"1px solid white\",\r\n    //                 width: \"300px\",\r\n    //                 borderRadius: \"5px\",\r\n    //               }}\r\n    //               onClick={() => handleTypes(\"clinic\")}\r\n    //             >\r\n    //               <span>Only for&nbsp;</span>\r\n    //               &nbsp;Clinics\r\n    //             </div>\r\n    //           </div>\r\n    //         </div>\r\n    //       )}\r\n\r\n    //       <form onSubmit={handleSubmit(submit)}>\r\n    //         {/* Patient form */}\r\n    //         {component === COMPONENTS[\"3\"] && (\r\n    //           <div className=\"loginform mt-0 user-details col-3 d-flex flex-column\">\r\n    //             <h3 className=\"mb-3\">Fill your Details</h3>\r\n    //             <div className=\"mb-2\">\r\n    //               <label htmlFor=\"\">Mobile Number</label>\r\n    //               <h4 className=\"mb-2 text-disabled\">\r\n    //                 +91 {details?.phone?.slice(0, 3)}-{details?.phone?.slice(3, 6)}-\r\n    //                 {details?.phone?.slice(-4)}\r\n    //               </h4>\r\n    //             </div>\r\n    //             <div className=\"col-12\">\r\n    //               <input type=\"hidden\" value={\"patient\"} {...register(\"source\")} />\r\n    //               <div>\r\n    //                 <label htmlFor=\"\" className=\"mb-2\">\r\n    //                   Full Name\r\n    //                 </label>\r\n    //                 <input\r\n    //                   type=\"text\"\r\n    //                   className={`form-control mb-2 ${errors?.name ? \"border-danger\" : \"\"\r\n    //                     }`}\r\n    //                   placeholder=\"Enter Full name\"\r\n    //                   {...register(\"name\", {\r\n    //                     required: \"name is required\",\r\n    //                   })}\r\n    //                 />\r\n    //               </div>\r\n    //             </div>\r\n    //             <div className=\"col-12 d-flex flex-row\">\r\n    //               <div className=\"col-6 me-2\">\r\n    //                 <label htmlFor=\"\" className=\"mb-2\">\r\n    //                   Age\r\n    //                 </label>\r\n    //                 <input\r\n    //                   type=\"text\"\r\n    //                   className={`form-control mb-2 ${errors?.age ? \"border-danger\" : \"\"\r\n    //                     }`}\r\n    //                   placeholder=\"Enter age\"\r\n    //                   {...register(\"age\", {\r\n    //                     required: \"age is required\",\r\n    //                   })}\r\n    //                 />\r\n    //               </div>\r\n\r\n    //               <div className=\"\">\r\n    //                 <label htmlFor=\"\" className=\"mb-2\">\r\n    //                   Gender\r\n    //                 </label>\r\n    //                 <select\r\n    //                   style={{ padding: \".475rem .75rem\" }}\r\n    //                   className={`form-control mb-2 col-2 w-100  ${errors?.age ? \"border-danger\" : \"\"\r\n    //                     }`}\r\n    //                   {...register(\"gender\", { required: \"Gender is required\" })}\r\n    //                 >\r\n    //                   <option value=\"male\">Male</option>\r\n    //                   <option value=\"female\">Female</option>\r\n    //                   <option value=\"other\">Other</option>\r\n    //                 </select>\r\n    //               </div>\r\n    //             </div>\r\n    //             <div className=\"mb-3\">\r\n    //               <label className=\"mb-2\" htmlFor=\"\">\r\n    //                 Father name\r\n    //               </label>\r\n    //               <input\r\n    //                 type=\"text\"\r\n    //                 className={`form-control mb-2 `}\r\n    //                 placeholder=\"Enter Father name\"\r\n    //                 {...register(\"fatherName\")}\r\n    //               />\r\n    //             </div>\r\n    //             <div className=\" mb-3\">\r\n    //               <label className=\"mb-2\" htmlFor=\"\">\r\n    //                 Address\r\n    //               </label>\r\n    //               <input\r\n    //                 type=\"text\"\r\n    //                 className={`form-control mb-2 ${errors?.address ? \"border-danger\" : \"\"\r\n    //                   }`}\r\n    //                 placeholder=\"Enter Address\"\r\n    //                 {...register(\"address\", {\r\n    //                   required: \"address is required\",\r\n    //                 })}\r\n    //               />\r\n    //             </div>\r\n    //             <button className=\"btn btn1 btn-info\" type=\"submit\">\r\n    //               Save\r\n    //             </button>\r\n    //           </div>\r\n    //         )}\r\n\r\n    //         {/* Organization form */}\r\n    //         {component === COMPONENTS[\"4\"] && (\r\n    //           <div className=\"loginform mt-0 user-details col-3 d-flex flex-column\">\r\n    //             <h3 className=\"mb-3\">Fill your details</h3>\r\n    //             <div className=\"mb-2\">\r\n    //               <label htmlFor=\"\">Mobile Number</label>\r\n    //               <h4 className=\"mb-2 text-disabled\">\r\n    //                 +91 {details?.phone?.slice(0, 3)}-{details?.phone?.slice(3, 6)}-\r\n    //                 {details?.phone?.slice(-4)}\r\n    //               </h4>\r\n    //             </div>\r\n    //             <div className=\"col-12\">\r\n    //               <div>\r\n    //                 <input\r\n    //                   type=\"hidden\"\r\n    //                   value={type}\r\n    //                   placeholder=\"Enter Registration No.\"\r\n    //                   {...register(\"source\")}\r\n    //                 />\r\n    //               </div>\r\n    //               <div>\r\n    //                 <label className=\"mb-2\">Registration No.</label>\r\n    //                 <input\r\n    //                   type=\"text\"\r\n    //                   name=\"registration no\"\r\n    //                   className={`form-control mb-2 ${errors?.registrationNo ? \"border-danger\" : \"\"\r\n    //                     }`}\r\n    //                   placeholder=\"Enter Registration No.\"\r\n    //                   {...register(\"registrationNo\", {\r\n    //                     required: \"Email is required\",\r\n    //                   })}\r\n    //                 />\r\n    //               </div>\r\n\r\n    //               <div>\r\n    //                 <label className=\"mb-2\">Name</label>\r\n    //                 <input\r\n    //                   type=\"text\"\r\n    //                   name=\"name\"\r\n    //                   className={`form-control mb-2 ${errors?.name ? \"border-danger\" : \"\"\r\n    //                     }`}\r\n    //                   placeholder=\"Enter Full name\"\r\n    //                   {...register(\"name\", {\r\n    //                     required: \"Email is required\",\r\n    //                   })}\r\n    //                 />\r\n    //               </div>\r\n    //               <div>\r\n    //                 <label htmlFor=\"\" className=\"mb-2\">\r\n    //                   Email\r\n    //                 </label>\r\n    //                 <input\r\n    //                   type=\"email\"\r\n    //                   name=\"email\"\r\n    //                   className={`form-control mb-2 ${errors?.email ? \"border-danger\" : \"\"\r\n    //                     }`}\r\n    //                   placeholder=\"Enter Email\"\r\n    //                   {...register(\"email\", {\r\n    //                     required: \"Email is required\",\r\n    //                   })}\r\n    //                 />\r\n    //               </div>\r\n    //               <button\r\n    //                 className=\"btn btn-primary btn-md shadow-none\"\r\n    //                 type=\"submit\"\r\n    //               >\r\n    //                 Save\r\n    //               </button>\r\n    //             </div>\r\n    //           </div>\r\n    //         )}\r\n    //       </form>\r\n    //     </div>\r\n    //   </div>\r\n\r\n    // </Container>\r\n\r\n    <Login/>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n"],"names":["_details$phone","_details$phone2","_details$phone3","_details$phone4","_details$phone5","_details$phone6","LocationState","useLocation","state","_useForm","useForm","onChange","register","inputRef","reset","handleSubmit","formState","errors","useRef","otpRef","toasty","useToasty","_useState","useState","_useState2","_slicedToArray","otp","setOtp","_useState3","_useState4","user","setUser","_useState5","_useState6","setType","COMPONENTS","_useState7","_useState8","component","setComponent","_useState9","_useState10","setImages","_useState11","name","phone","age","gender","_useState12","details","setDetails","useEffect","initailizer","userValidate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","_yield$axiosInstance$","data","wrap","_context","prev","next","error","abrupt","axiosInstance","_objectSpread","sent","status_code","message","success","t0","console","stop","_x","apply","arguments","ValidateOTP","_ref2","_callee2","_data$user","_data$user$twoFactor","_data$user2","_yield$axiosInstance$2","_userRoutes$data$user","_data$user3","_context2","current","userId","_id","localStorage","setItem","JSON","stringify","token","twoFactor","isVerified","isActive","redirectTo","window","location","replace","userRoutes","userType","path","handleTypes","_ref3","_callee3","type","_userRoutes$data$user2","_data$user4","_yield$axiosInstance$3","_context3","organizationId","getAuthHeader","includes","_x2","_ref5","_callee5","imagesData","_context5","getImages","images","_jsx","className","style","height","children","_jsxs","Container","src","loginpaoster","_Fragment","concat","String","slice","FontAwesomeIcon","onClick","icon","faEdit","placeholder","maxLength","inputMode","ref","NumberFormat","Link","to","fontSize","faHospitalUser","clinic","marginLeft","Hospital","htmlFor","required","width","Login"],"sourceRoot":""}