{"version":3,"file":"static/js/604.e1dd23b9.chunk.js","mappings":"4NAQA,qBACE,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAEnBG,GAAWC,EAAAA,EAAAA,MACXC,EAAc,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,WAE7DC,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,CAAET,IAEL,IAAMS,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGC,EAAAA,GAAAA,IAAkB,gBAAcC,EAAAA,EAAAA,GAAA,CAAKC,OAAQ,CAAEjB,OAAQF,EAAaJ,OAAAA,KAAawB,EAAAA,EAAAA,QAAmB,KAAD,EAAAT,EAAAG,EAAAO,KAAlHT,EAAID,EAAJC,KAENnB,EAAe,OAAJmB,QAAI,IAAJA,OAAI,EAAJA,EAAMpB,SAASsB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAE1BS,QAAQC,MAAKV,EAAAQ,IAAQ,yBAAAR,EAAAW,OAAA,GAAAf,EAAA,kBAExB,kBARkB,OAAAJ,EAAAoB,MAAA,KAAAC,UAAA,KAUnB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAOjC,EAAW,YAAAkC,OAAgBlC,GAAiB,UAAWmC,OAAQ,SAAUC,SAAU,SAAExB,GAAI,OAAMf,EAAWe,EAAM,KAC/HmB,EAAAA,EAAAA,KAAA,OAAKM,UAAU,gBAAeP,UACpB,OAAPtC,QAAO,IAAPA,OAAO,EAAPA,EAAS8C,QAAS,EACjB9C,EAAQ+C,KAAI,SAACC,EAAQC,GAAG,OACtBV,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAACF,OAAQA,GAAaC,EAAQ,KAG3CV,EAAAA,EAAAA,KAAA,OAAAD,UAAMC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,yBAAwBP,SAAC,qBAKtD,C","sources":["components/webcomponents/Doctors.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { axiosInstance, getAuthHeader } from \"../../constants/utils\";\nimport DoctorCard from \"../App/cards/DoctorCard\";\nimport Container from \"../../layout/Container\";\nimport { useLocation } from \"react-router-dom\";\nimport Filter from \"../App/Pages/Filter\";\n\n\nexport default () => {\n  const [doctors, setDoctors] = useState([]);\n  const [ filter, setFilter ] = useState({});\n\n  const location = useLocation()\n  const searchQuery = new URLSearchParams(location.search).get('search')\n\n  useEffect(() => {\n    getAllDoctors();\n  }, [ filter, ]);\n\n  const getAllDoctors = async () => {\n    try {\n      let { data } = await axiosInstance.get(\"/all-doctors\", {  params: { search: searchQuery, filter }, ...getAuthHeader() });\n\n      setDoctors(data?.doctors);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Filter title={searchQuery ? `Search : ${ searchQuery }` : 'Doctors'} source={'Doctor'} callback={( data ) => setFilter( data )} />\n      <div className=\"row p-0 mx-0 \">\n        {doctors?.length > 0 ?\n          doctors.map((doctor, key) =>\n            <DoctorCard doctor={doctor} key={key}  />\n          )\n          :\n          <div ><h5 className=\"text-muted text-center\">No Doctors</h5></div>\n        }\n      </div>\n    </Container>\n  );\n}"],"names":["_useState","useState","_useState2","_slicedToArray","doctors","setDoctors","_useState3","_useState4","filter","setFilter","location","useLocation","searchQuery","URLSearchParams","search","get","useEffect","getAllDoctors","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axiosInstance$","data","wrap","_context","prev","next","axiosInstance","_objectSpread","params","getAuthHeader","sent","t0","console","error","stop","apply","arguments","_jsxs","Container","children","_jsx","Filter","title","concat","source","callback","className","length","map","doctor","key","DoctorCard"],"sourceRoot":""}